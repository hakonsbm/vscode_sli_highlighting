{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "SLI",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#invalid"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#literals"
    },
    {
      "include": "#units"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#expression"
    },
    {
      "include": "#unittest"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control",
          "match": "\\b(abort|abs|abs_d|abs_i|acos|add|addpath|addtotrie|allocations|and|append|AppendTo|Apply|apropos|arange|area2|area|array|arrayload|ArrayQ|ArrayShape|arraystore|asin|assert|available|backtrace_off|backtrace_on|begin|bind|break|breakup|callback|call|capacity|case|cd|ceil|cerr|cin|clear|cleardict|cleardictstack|clic|clock|cloc|clonedict|close|closeinput|CompareFiles|CompileMath|Connect|ConnectLayers|connruledict|continue|copy|CopyFile|CopyModel|cos|count|countdictstack|counttomark|cout|Create|CreateLayer|CreateRDV|CreateRNG|cst|ctermid|currentdict|currentname|cv1d|convert|2-dimensional|coordinates|to|1-dim|index|cv2d|cva|cva_d|cva_t|cvd|cvdict|cvd_s|cv_dv|cvnodecollection|cvi|cvi_s|cv_iv|cvlit|cvn|cvo|cvs|cvs_f|cvt_a|cvx|cycles|CyclicValue|DataConnect_a|DataConnect|DataConnect_i_D_s|debug|debugoff|debugon|debug.sli|def|DeleteFile|dexp|dict|DictQ|dictstack|Dimensions|Directory|dirname|div|Dot1D|Dot|DoubleQ|drand|Drop|DumpLayerNodes|DumpLayerConnections|dup2|dup|edit|elementstates|empty|end|endl|endusing|environment|eof|eq_dv|eq_iv|eq|erase|Erfc|Erf|errordict|eval|EvaluateLiteralInfixes|E|exch|exec|ExecFunction|ExecMath|execstack|executive|exit|exithook|exp|Export|FileNames|file|FindRoot|FiniteQ|First|FixedPoint|Flatten|floor|flush|FoldList|Fold|forall|forallindexed|for|fork|FractionalPart|frexp|Function|gabor_|Gammainc|gauss2d_|GaussDiskConv|geq|GetConnections|getc|GetDefaults|get_d|getenv|GetGlobalRNG|getinterval|GetKernelStatus|getline|GetMax|GetMin|GetNodes|GetOption|GetOptions|getPGRP|getPID|getPPID|get|gets|GetStatus_dict|GetStatus|GetStatus_v|GetSynapseStatus|GNUaddhistory|GNUreadline|good|grep|gt|handleerror|HasDifferentMemberQ|helpdesk|helpindex|help|iclear|ieof|ifail|ifstream|ignore|igood|in_avail|index|info|info_ds|initialize_module|Inline|insertelement|insert|inspect|Install|IntegerPart|IntegerQ|inv|irand|iround|isatty|is_mpi|is_threaded|is_threaded_with_openmp|join|joinpath|JoinTo|kernel|keys|kill|known|LambertW0|LambertWm1|LambertW|Last|LayoutArray|ldexp|length_a|length|length_d|length_lp|length_p|length_s|leq|license|LiteralQ|ln|load|LocalOnly|LocateFileNames|log|lookup|loop|ls|lt|MakeDirectory|Map|MapAt|MapIndexed|MapThread|mark|MathematicaToSliIndex|mathexecutive|MatrixQ|Max|max|Mean|MemberQ|MemoryInfo|memory_thisjob_bg|memory_thisjob_darwin|memory_thisjob|MergeDictionary|MergeLists|message|Min|min|mkfifo|mod|modeldict|modf|Most|MoveDirectory|MoveFile|ms2hms|mul|namespace|neg_d|neg_i|neg|neq|Nest|nest_indirect|NestList|nest_serial|Node|noop|not|npop|NumberQ|NumProcesses|oclear|oeof|ofsopen|ofstream|ogood|oldgetline|ones|operandstack|Options|OptionsDictionary|or|osstream|ostrstream|OuterProduct|over|page|pageoutput|parsestdin|Partition|Part|path|pclockspersec|pclocks|pcvs|pgetrusage|pick|pipe|Pi|Plus|pop|pow|ppage|pprint|prepend|print_error|PrintNodes|PrintNodesToStream|print|ProcessorName|proxynode|pstack|ptimes|put_d|putinterval|put|pwd|quit|raiseagain|raiseerror|RandomArray|Random|RandomSubset|Range|Rank|rdevdict|ReadDouble|ReadInt|readline|ReadList|ReadModes|readPGM|Read|ReadWord|realtime|references|regcomp|regexdict|regexec|regex_find|regex_find_r|regex_find_rf|regex_find_s|regex_find_sf|regex_replace|RemoveDirectory|removeguard|repeatany|repeat|ReplaceOccurrences|ReplacePart|replace|reserve|ResetKernel|ResetNetwork|ResetOptions|reset|RestoreDictionary|restoreestack|RestoreOptions|restoreostack|restore|Rest|resume|ResumeSimulation|reverse|rngdict|rolld|roll|rollu|rot|round|run|SaveDictionary|SaveOptions|save|ScanThread|searchfile|searchif|searchifstream|search|seed|Select|SetAcceptableLatency|SetDefaults|Set|SetDirectory|SetFakeNumProcesses|setguard|SetKernelStatus|setNONBLOCK|SetOptions|setpath|setprecision|SetStatus_dict|SetStatus|SetStatus_v|SetSynapseStatus|setverbosity|SFWdumpparameters|ShowDefaults|ShowOptions|ShowStatus|shpawn|shrink|signaldict|Sign|Simulate|sin|size|sleep_i|sleep|SLIFunctionWrapper|SliToMathematicaIndex|Sort|spawn|spikes|Split|spoon|sqr|sqrt|stack|StandardDeviation|start|statusdict|stopped|stop|StringQ|str|SubsetQ|sub|switchdefault|switch|symbol|symbol_s|synapsedict|SyncProcesses|sysexec|system|systemtime|Table|Take|taskset|taskset_thisjob|TensorRank|tic|TimeCommunicationAlltoall|TimeCommunicationAlltoall|TimeCommunicationAlltoallv|TimeCommunicationAlltoallv|TimeCommunicationOffgrid|TimeCommunication|TimeCommunication|TimeCommunicationv|time|Times|tmpnam|toc|token_is|token|token_s|ToLowercase|ToMathematicaExpression|topinfo_d|Total|ToUppercase|Transpose|trie|trieinfo|trim|trunc|typebind|typeinfo|type|typestack|undef|unit_conversion|UnitStep|usertime|using|validate|values|Variance|variant|verbosity|volume_transmitter|waitPID|wait|welcome|which|who|whos|writePGM|xifstream|xor|zeros)\\b"
        },
        {
          "name": "keyword.control",
          "match": "(=only)"
        },
        {
          "name": "keyword.control",
          "match": "\\b(if|ifelse)\\b"
        },
        {
          "name": "constant.language.boolean",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator",
          "match": "=|<-|\\*|-|\\+|((?<=\\w)/)|((?<=\\s)/(?=\\s))"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double",
          "begin": "\\(",
          "end": "\\)"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "support.type.property-name",
          "match": "/[\\w\\d_]+"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "\\b([-+]?\\d+\\.?\\d*)\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.other",
          "match": "\\b(M_INFO|M_ERROR|M_DEBUG|M_WARNING|M_STATUS|M_FATAL)\\b"
        }
      ]
    },
    "units": {
      "patterns": [
        {
          "name": "entity.other.attribute-name",
          "match": "\\b(mV|pF|pA|ms|s|Hz|nS)\\b"
        }
      ]
    },
    "expression": {
      "patterns": [
        {
          "name": "meta",
          "begin": "\\(",
          "end": "\\)(?=\\s?ExecMath)",
          "patterns": [
            {
              "include": "#operators"
            },
            {
              "include": "#numbers"
            },
            {
              "include": "#comments"
            },
            {
              "name": "support.function",
              "match": "\\w+(?=\\(.*\\))"
            }
          ]
        }
      ]
    },
    "invalid": {
      "patterns": [
        {
          "name": "invalid",
          "match": "\\*/.*\\n"
        },
        {
          "name": "invalid.illegal",
          "match": "\\b(0+\\d+)\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.block.documentation",
          "begin": "/\\* BeginDocumentation",
          "end": "\\*/"
        },
        {
          "name": "comment.line",
          "match": "%.*$"
        }
      ]
    },
    "unittest": {
      "patterns": [
        {
          "name": "entity.name.function",
          "match": "\\b(assert_or_die|pass_or_die|fail_or_die|failbutnocrash_or_die|passorfailbutnocrash_or_die|crash_or_die|distributed_assert_or_die|distributed_invariant_assert_or_die|distributed_collect_assert_or_die|distributed_process_invariant_collect_assert_or_die|distributed_process_invariant_events_assert_or_die|distributed_rank_invariant_collect_assert_or_die|distributed_pass_or_die)\\b"
        }
      ]
    }
  },
  "scopeName": "source.sli"
}
